/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    // Charting api/runtime
    api  group: 'org.jfree', name: 'jfreechart', version: '1.0.17'

    // database/persistence
    api group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa.modelgen', version: '2.4.2'
    implementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.5'

    // DBMS
    implementation group: 'org.apache.derby', name: 'derby', version: '10.13.1.1'
}

sourceSets  {
    // MJC this may be needed to make entity classes visible to the persistence scanner
    sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir
}

jar {
    manifest {
        attributes("Main-Class": 'BadBM.App')
    }
}


test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

sourceSets  {
    // MJC this may be needed to make entity classes visible to the persistence scanner
    sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir
}
